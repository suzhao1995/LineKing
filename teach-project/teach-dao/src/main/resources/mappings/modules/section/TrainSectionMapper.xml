<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rs.teach.mapper.section.dao.TrainSectionMapper">
    <insert id="addTrainSection" parameterType="com.rs.teach.mapper.section.dto.SectionDto">
        insert into TF_EL_TRAIN_SECTION
        (
            train_section_id,train_course_id, train_section_sortid,
            train_litter_section_sort, train_litter_section_name,
            train_litter_section_url, train_litter_section_type, update_file_name,
            practice_id, testpaper_id,COURSEWARE_ID
        )
        values (
            SEQ_EL_TRAIN_SECTION.nextval, #{courseId},#{sectionSortid},
            #{litterSectionSort},#{litterSectionName},
            #{litterSectionUrl}, #{litterSectionType},#{updateFileName},
            #{practiceId},#{testpaperId},#{coursewareId}
        )

    </insert>

    <update id="updateTrainSection" parameterType="com.rs.teach.mapper.section.dto.SectionDto">
        update TF_EL_TRAIN_SECTION
        <set>
            <if test="coursewareId != null and coursewareId != ''">
                COURSEWARE_ID = #{coursewareId},
            </if>
            <if test="courseId != null and courseId != ''">
                TRAIN_COURSE_ID = #{courseId},
            </if>
            <if test="sectionSortid != null and sectionSortid != ''">
                TRAIN_SECTION_SORTID = #{sectionSortid},
            </if>
            <if test="litterSectionSort != null and litterSectionSort != ''">
                TRAIN_LITTER_SECTION_SORT = #{litterSectionSort},
            </if>
            <if test="litterSectionName != null and litterSectionName != ''">
                TRAIN_LITTER_SECTION_NAME = #{litterSectionName},
            </if>
            <if test="litterSectionUrl != null and litterSectionUrl != ''">
                TRAIN_LITTER_SECTION_URL = #{litterSectionUrl},
            </if>
            <if test="litterSectionType != null and litterSectionType != ''">
                TRAIN_LITTER_SECTION_TYPE = #{litterSectionType},
            </if>
            <if test="updateFileName != null and updateFileName != ''">
                UPDATE_FILE_NAME = #{updateFileName},
            </if>
            <if test="practiceId != null and practiceId != ''">
                PRACTICE_ID = #{practiceId},
            </if>
            <if test="testpaperId != null and testpaperId != ''">
                TESTPAPER_ID = #{testpaperId},
            </if>
        </set>
        where TRAIN_SECTION_ID = #{sectionId}
    </update>

    <select id="selectTrainSection" resultType="com.rs.teach.mapper.section.entity.TrainSection">
        select
        ts.train_section_id,
        ts.train_course_id,
        ts.TRAIN_SECTION_SORTID,
        tts.TOTLE_SECTION_SORT as trainSectionSort,
        tts.TOTLE_SECTION_NAME as trainSectionName,
        ts.train_litter_section_sort,
        ts.train_litter_section_name,
         ts.train_litter_section_url,
         ts.train_litter_section_type,
         ts.update_file_name,
         ts.practice_id,
         ts.testpaper_id,
         ts.courseware_id
        from tf_el_train_section ts ,TF_EL_TRAIN_TOTLE_SECTION tts
        where ts.TRAIN_SECTION_SORTID = tts.ID
        and train_section_Id =  #{sectionId}
    </select>

    <select id="selectSectionList" resultType="com.rs.teach.mapper.section.entity.TrainSection">
        select ts.TRAIN_SECTION_ID,
        ts.TRAIN_COURSE_ID,
        ts.TRAIN_SECTION_SORTID,
        tts.TOTLE_SECTION_SORT,
        tts.TOTLE_SECTION_NAME,
        ts.TRAIN_LITTER_SECTION_SORT,
        ts.TRAIN_LITTER_SECTION_NAME
        from tf_el_train_section ts,TF_EL_TRAIN_TOTLE_SECTION tts
        where ts.TRAIN_SECTION_SORTID = tts.ID
        and train_course_Id = #{trainCourseId}
        and train_section_sortid = #{trainSectionSortid}
        order by to_number(train_litter_section_sort) asc
    </select>

    <select id="selectTrainSectionById" resultType="com.rs.teach.mapper.section.vo.TrainSectionVo">
        select ID, TOTLE_SECTION_SORT as trainSectionSort,TOTLE_SECTION_NAME as trainSectionName
        from TF_EL_TRAIN_TOTLE_SECTION
        where course_id = #{courseId}
    </select>

    <select id="selectTrainLitterSection" resultType="com.rs.teach.mapper.section.vo.TrainLitterSectionVo">
        select TRAIN_SECTION_ID,TRAIN_LITTER_SECTION_SORT,TRAIN_LITTER_SECTION_NAME
               ,TRAIN_LITTER_SECTION_URL,TRAIN_LITTER_SECTION_TYPE,UPDATE_FILE_NAME,PRACTICE_ID ,TESTPAPER_ID
               ,COURSEWARE_ID
        FROM TF_EL_TRAIN_SECTION
        WHERE TRAIN_COURSE_ID = #{courseId}
        and TRAIN_SECTION_SORTID = #{trainSectionSortid}
        order by to_number(TRAIN_LITTER_SECTION_SORT)
    </select>

    <select id="selectSectionNum" resultType="java.lang.Integer">
        select count(1) from TF_EL_TRAIN_SECTION
        where TRAIN_COURSE_ID=#{courseId}
    </select>
    <select id="getSectionByCourseId" resultType="com.rs.teach.mapper.section.entity.Section">
        select  train_section_id as sectionId,
                train_course_id as courseId,
                train_section_sortid as totleSectionSortid,
                train_litter_section_sort as sectionSort,
                train_litter_section_name as sectionName,
                train_litter_section_url as sectionUrl,
                train_litter_section_type as sectionType,
                update_file_name as updateFileName,
                practice_id as workId,
                testpaper_id as testPaperId,
                courseware_id as coursewareId
        from TF_EL_TRAIN_SECTION,TF_EL_TRAIN_TOTLE_SECTION
        where ID = TRAIN_SECTION_SORTID
        and TRAIN_COURSE_ID = #{courseId}
        order by TOTLE_SECTION_SORT,train_litter_section_sort
    </select>


    <select id="selectTotoleSectionSortMax" resultType="com.rs.teach.mapper.backstage.entity.TotleSection">
        select * from
         (
            select ID,TOTLE_SECTION_SORT,TOTLE_SECTION_NAME,COURSE_ID
            from TF_EL_TRAIN_TOTLE_SECTION
            where COURSE_ID = #{courseId}
            order by to_number(TOTLE_SECTION_SORT) desc
        )
        where rownum = 1
    </select>

    <insert id="addAllTotleSection" parameterType="java.util.List">
        insert into TF_EL_TRAIN_TOTLE_SECTION(id, totle_section_sort, totle_section_name, course_id)
        select SEQ_EL_TRAIN_TOTLE_SECTION.nextval,A.* from(
            <foreach collection="list" item="item" index="index" open="(" close=")" separator="union all">
              SELECT
                #{item.totleSectionSort,jdbcType=VARCHAR},
                #{item.totleSectionName,jdbcType=VARCHAR},
                #{item.courseId,jdbcType=VARCHAR}
              FROM DUAL
            </foreach>
        ) A
    </insert>

    <select id="selectTotleSection" parameterType="com.rs.teach.mapper.section.dto.TotleSectionDto" resultType="com.rs.teach.mapper.backstage.entity.TotleSection">
        select * from TF_EL_TRAIN_TOTLE_SECTION
        where COURSE_ID = #{courseId}
        order by to_number(TOTLE_SECTION_SORT)
    </select>

    <update id="updateTotleSection" parameterType="com.rs.teach.mapper.section.dto.TotleSectionDto">
        update TF_EL_TRAIN_TOTLE_SECTION
        set TOTLE_SECTION_NAME = #{totleSectionNameforUpdate}
        where id = #{id}
    </update>

    <select id="IsEmpty" resultType="java.lang.Integer">
        select count(1) from TF_EL_TRAIN_TOTLE_SECTION
        where COURSE_ID = #{courseId}
    </select>
    <select id="IsBlank" parameterType="com.rs.teach.mapper.section.dto.SectionDto" resultType="java.lang.Integer">
        select count(1) from TF_EL_TRAIN_SECTION
        where TRAIN_COURSE_ID = #{courseId}
        and TRAIN_SECTION_SORTID = #{sectionSortid}
    </select>
    <select id="selectTrainLitterSectionSortMax" parameterType="com.rs.teach.mapper.section.dto.SectionDto" resultType="com.rs.teach.mapper.section.vo.TrainLitterSectionVo">
        select * from
         (
            select *
            from TF_EL_TRAIN_SECTION
            where TRAIN_COURSE_ID = #{courseId}
            and TRAIN_SECTION_SORTID = #{sectionSortid}
            order by to_number(TRAIN_LITTER_SECTION_SORT) desc
        )
        where rownum = 1
    </select>
    <select id="selectPidAndTid" resultType="com.rs.teach.mapper.section.dto.SectionDto">
        select t.TID,p.PID
        from TF_EL_TRAIN_SECTION s ,  TF_EL_TESTPAPER t, TF_EL_PRACTICE p
        where s.TESTPAPER_ID = t.TESTPAPER_ID
        and s.PRACTICE_ID = p.PRACTICE_ID
        and s.TRAIN_SECTION_ID = #{sectionId}
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rs.teach.mapper.studyAttr.dao.CourseMapper">
	<resultMap type="com.rs.teach.mapper.studyAttr.entity.Course" id="courseById">
		<result property="courseId" column="course_id" />
		<result property="courseName" column="course_name" />
	</resultMap>
	<delete id="deleteCourse">
		delete from TF_EL_COURSE
		where COURSE_ID=#{courseId}

	</delete>

	<select id="queryCourseById" parameterType="java.lang.String" resultMap="courseById">
		select co.course_id,co.course_name from tf_el_course co, user_course_rela re 
		where co.course_id = re.course_id
			  and re.user_id = #{userId}
			  and re.rela_type = '1' group by co.course_id,co.course_name
	union all
		select vi.video_id as course_id,vi.video_name as course_name from tf_el_video vi, user_course_rela re 
    	where vi.video_id = re.course_id
        and re.user_id = #{userId}
        and re.rela_type = '3' group by vi.video_id,vi.video_name
	</select>
	
	<resultMap type="java.util.HashMap" id="InfoMap">
		<result property="classId" column="class_id" />
		<result property="className" column="class_name" />
		<result property="courseId" column="course_id" />
		<result property="courseName" column="course_name" />
		<result property="sectionNumber" column="section_number" />
		<result property="relaType" column="rela_type" />
	</resultMap>
	
	<!-- 查询用户所教课程 -->
	<select id="courseInfoForUser" parameterType="java.lang.String" resultMap="InfoMap">
		select re.class_id, cl.class_name,re.course_id,tc.course_name,tc.section_number,re.rela_type
			from user_course_rela re, tf_el_course tc,tf_el_class cl 
		<where> 
			  re.course_id = tc.course_id 
			  and re.class_id = cl.class_id 
			  and re.user_id = #{userId} and re.rela_type = '1'
			  <if test="classId != null and classId != ''">
			  	and re.class_id = #{classId}
			  </if>
		</where>
		union all
		select re.class_id, cl.class_name,re.course_id,vi.video_name as course_name,'' as section_number,re.rela_type
			from user_course_rela re, tf_el_video vi, tf_el_class cl
		<where> 
			  re.course_id = vi.video_id 
			  and re.class_id = cl.class_id  
			  and re.user_id = #{userId} and re.rela_type = '3'
			  <if test="classId != null and classId != ''">
			  	and re.class_id = #{classId}
			  </if>
		</where>
	</select>
	
	<resultMap type="java.util.HashMap" id="secMap">
		<result property="sectionId" column="section_id" />
		<result property="sectionSort" column="section_SORT" />
		<result property="sectionName" column="section_name" />
		<result property="totleSectionSort" column="totleSection_sort" />
		<result property="totleSectionName" column="totleSection_name" />
	</resultMap>
	
	<select id="finishStudy" parameterType="java.lang.String" resultMap="secMap">
		select re.section_id,ts.section_name,ts.section_SORT,s.totle_section_sort as totleSection_sort,s.totle_section_name as totleSection_name
			from user_course_rela re, tf_el_section ts,tf_el_train_totle_section s
		where re.section_id = ts.section_id and ts.totlesection_sortid = s.id
		  and re.rela_type = '0' 
		  and re.user_id = #{userId}
		  and re.course_id = #{courseId}
		  and re.class_id = #{classId} 
		  and re.isfinish = '2'
	</select>
	
	<select id="queryNote" parameterType="map" resultType="java.lang.String">
		select ns.note
			from tf_el_note ns
		where
			  ns.user_id = #{con_userId} 
			  and ns.course_id = #{con_courseId} 
			  and ns.class_id = #{con_classId}
			  and ns.section_id = #{con_sectionId}
	</select>
	
	<select id="querySummary" parameterType="map" resultType="java.lang.String">
		select ns.summary
			from tf_el_summary ns
		where
			  ns.user_id = #{con_userId} 
			  and ns.course_id = #{con_courseId} 
			  and ns.class_id = #{con_classId}
			  and ns.section_id = #{con_sectionId}
	</select>
	
	<select id="isExsitSummary" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from tf_el_summary t 
		where t.USER_ID = #{userId} 
			and t.SECTION_ID = #{sectionId} 
			and t.class_id = #{classId}
	</select>
	
	<update id="updateSummary" parameterType="com.rs.teach.mapper.studyAttr.entity.NoteSummary">
		update tf_el_summary t set t.SUMMARY = #{summary}
			where t.USER_ID = #{userId} and t.SECTION_ID = #{sectionId} and t.CLASS_ID = #{classId}
	</update>

	<insert id="insertSummary" parameterType="com.rs.teach.mapper.studyAttr.entity.NoteSummary">
		insert into tf_el_summary
			(
				USER_ID,
				SECTION_ID,
				COURSE_ID,
				CLASS_ID,
				SUMMARY
			)
		values
			(
				#{userId},
				#{sectionId},
				#{courseId},
				#{classId},
				#{summary}
			)
	</insert>
    <resultMap type="com.rs.teach.mapper.studyAttr.entity.Course" id="queryCourseMap">
		<result property="courseId" column="COURSE_ID" />
		<result property="courseName" column="COURSE_NAME" />
		<result property="sectionNumber" column="SECTION_NUMBER" />
		<result property="coursePicUrl" column="COURSEPIC_URL" /> 
		<result property="courseWare" column="COURSEWARE" />
		<result property="schoolWork" column="SCHOOLWORK" />
		<result property="testPaper" column="TESTPAPER" />
		<result property="courseType" column="COURSE_TYPE" />
		<result property="courseLev" column="COURSE_LEV" />
	</resultMap>
	<!-- 分页查询课程信息 -->
	<select id="queryCourse" parameterType="map" resultMap="queryCourseMap">
		select t.COURSE_ID,
			t.COURSE_NAME,
			t.SECTION_NUMBER,
			t.COURSEPIC_URL,
			t.COURSEWARE,
			t.SCHOOLWORK,
			t.TESTPAPER,
			t.COURSE_TYPE,
			t.COURSE_LEV from tf_el_course t, school_course_rela scr
			<where>
				 t.course_id = scr.course_id
				 and scr.school_id = #{con_schoolId}
				 and scr.COURSE_FLAG = '1'
				<if test="con_courseType != null and con_courseType != ''">
					and t.COURSE_TYPE = #{con_courseType}
				</if>
				<if test="con_courseLev != null and con_courseLev != ''">
					and t.COURSE_LEV = #{con_courseLev}
				</if>
				<if test="con_likeSearch != null and con_likeSearch != ''">
					and t.COURSE_NAME like '%'||#{con_likeSearch}||'%'
				</if>
			</where> 
	</select>
	
	<!-- 根据课程id查询课程信息 -->
	<select id="selectCourseByCourseId" parameterType="java.lang.String" resultMap="queryCourseMap">
		select * from tf_el_course where COURSE_ID = #{courseId}
	</select>

	<select id="selectCourse" parameterType="com.rs.teach.mapper.studyAttr.dto.CourseDto" resultType="com.rs.teach.mapper.studyAttr.entity.Course">
		select COURSE_ID,COURSE_NAME,COURSE_TYPE,COURSE_LEV
		from TF_EL_COURSE
		<where>
			and 1= 1
			<if test="courseName != null and courseName != ''">
				and COURSE_NAME like  '%' || #{courseName} || '%'
			</if>
			<if test="courseType != null and courseType != ''">
				and COURSE_TYPE = #{courseType}
			</if>
		</where>
	</select>

	<insert id="addCourse" parameterType="com.rs.teach.mapper.studyAttr.dto.CourseDto">
		insert into TF_EL_COURSE(
					course_id, course_name, coursepic_url, courseware,
					schoolwork, testpaper, course_type, course_lev
					)
		values (SEQ_EL_COURSE.nextval,#{courseName},#{coursePicUrl},#{courseware},
				#{schoolwork},#{testpaper},#{courseType},#{courseLev})
	</insert>

	<update id="updateCourse" parameterType="com.rs.teach.mapper.studyAttr.dto.CourseDto">
		update TF_EL_COURSE
		<set>
			<if test="courseName !=null and courseName !=''">
				course_name = #{courseName},
			</if>
			<if test="coursePicUrl !=null and coursePicUrl !=''">
				coursepic_url = #{coursePicUrl},
			</if>
			<if test="courseware !=null and courseware !=''">
				courseware =#{courseware},
			</if>
			<if test="schoolwork !=null and schoolwork !=''">
				schoolwork =#{schoolwork},
			</if>
			<if test="testpaper !=null and testpaper !=''">
				testpaper =#{testpaper},
			</if>
			<if test="courseType !=null and courseType !=''">
				course_type =#{courseType},
			</if>
			<if test="courseLev !=null and courseLev !=''">
				course_lev =#{courseLev},
			</if>
		</set>
		where COURSE_ID = #{courseId}
	</update>

	<!-- 课程笔记 -->
	<select id="isExsitNote" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from tf_el_note t
		where t.USER_ID = #{userId}
			and t.SECTION_ID = #{sectionId}
			and t.class_id = #{classId}
	</select>

	<insert id="insertNote" parameterType="com.rs.teach.mapper.studyAttr.entity.NoteSummary">
		insert into tf_el_note
			(
				USER_ID,
				SECTION_ID,
				COURSE_ID,
				CLASS_ID,
				NOTE
			)
		values
			(
				#{userId},
				#{sectionId},
				#{courseId},
				#{classId},
				#{note}
			)
	</insert>

	<update id="updateNote" parameterType="com.rs.teach.mapper.studyAttr.entity.NoteSummary">
		update tf_el_note t set t.NOTE = #{note}
			where t.USER_ID = #{userId} and t.SECTION_ID = #{sectionId} and t.CLASS_ID = #{classId}
	</update>
	
	<resultMap type="java.util.HashMap" id="CourseTypeMap">
		<result property="courseType" column="course_type"/>
	</resultMap>
	<!-- 分组查询课程类型和等级 -->
	<select id="groupCourseType" resultMap="CourseTypeMap">
		select t.course_type from tf_el_course t group by t.course_type
	</select>
	<resultMap type="java.util.HashMap" id="CourseLevMap">
		<result property="courseLev" column="course_lev"/>
	</resultMap>
	<select id="groupCourseLev" resultMap="CourseLevMap">
		select t.course_lev from tf_el_course t group by t.course_lev
	</select>

    <select id="selectTrainCourse" parameterType="com.rs.teach.mapper.section.dto.SectionDto" resultType="com.rs.teach.mapper.studyAttr.vo.TrainCourseVo">
		select COURSE_ID,COURSE_NAME,COURSE_TYPE
		from TF_EL_COURSE
		<where>
			and 1= 1 
			<if test="courseName != null and courseName != ''">
				and COURSE_NAME like  '%' || #{courseName} || '%'
			</if>
			<if test="courseType != null and courseType != ''">
				and COURSE_TYPE = #{courseType}
			</if>
		</where>
	</select>

    <select id="selectCourseById" resultType="com.rs.teach.mapper.studyAttr.vo.TrainCourseVo">
		select COURSE_ID AS trainCourseId,
              COURSE_NAME AS trainCourseName,
              COURSEPIC_URL AS trainCoursePicUrl
        from tf_el_course
        where course_Id = #{courseId}
	</select>
	<select id="queryOptionVo" resultType="com.rs.teach.mapper.common.OptionVo">
		select COURSE_ID as value ,
				COURSE_NAME as label
		from TF_EL_COURSE
	</select>
    <select id="typeBy" resultType="com.rs.teach.mapper.common.ConditionExtVo">
		select null as id,
			   COURSE_TYPE as label
		from TF_EL_COURSE
		group by COURSE_TYPE
	</select>
	<select id="levBy" resultType="com.rs.teach.mapper.common.ConditionExtVo">
		select null as id,
			   COURSE_LEV as label
		from TF_EL_COURSE
		where COURSE_TYPE = #{courseType}
	</select>
	<select id="courseBy" resultType="com.rs.teach.mapper.common.ConditionExtVo">
		select COURSE_ID as id ,
			   COURSE_NAME as label
		from TF_EL_COURSE
		where COURSE_TYPE = #{courseType}
		and course_lev = #{courseLev}
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rs.teach.mapper.video.dao.VideoMapper">
	<resultMap type="com.rs.teach.mapper.video.entity.Video" id="video">
		<result property="videoId" column="VIDEO_ID" />
		<result property="videoName" column="VIDEO_NAME" />
		<result property="videoUrl" column="VIDEO_URL" />
		<result property="schoolWork" column="SCHOOLWORK" />
		<result property="videoWare" column="VIDEOWARE" />
		<result property="testPaper" column="TESTPAPER" />
		<result property="videoType" column="VIDEO_TYPE" />
		<result property="videoPath" column="VIDEO_PATH"/>
	</resultMap>
	
	<resultMap type="com.rs.teach.mapper.video.entity.VideoSection" id="videoSection">
		<result property="videoSectionId" column="VIDEOSECTION_ID" />
		<result property="videoSectionName" column="VIDEOSECTION_NAME" />
		<result property="videoId" column="VIDEO_ID" />
		<result property="videoSectionUrl" column="VIDEOSECTION_URL" />
		<result property="videoSectionPath" column="VIDEOSECTION_PATH" />
		<result property="videoSectionSort" column="VIDEOSECTION_SORT" />
		<result property="videoTotleSortId" column="VIDEOTOTLE_SORTID" />
		<result property="videoTotleSort" column="VIDEOTOTLE_SORT" />
		<result property="videoTotleName" column="VIDEOTOTLE_NAME" />
		<result property="paperId" column="PAPER_ID" />
		<result property="workId" column="WORK_ID" />
		<result property="courseWareId" column="COURSE_WAREID" />
	</resultMap>
	
	<select id="queryVideos" parameterType="java.lang.String" resultMap="video">
		select t.VIDEO_ID,t.VIDEO_NAME,
		t.VIDEO_URL,t.SCHOOLWORK,t.VIDEOWARE,t.TESTPAPER,t.VIDEO_TYPE from tf_el_video t,school_course_rela scr
		<where>
			t.VIDEO_ID = scr.COURSE_ID
			and scr.SCHOOL_ID = #{schoolId}
			and scr.COURSE_FLAG = '1'
			<if test="videoType != null and videoType != ''">
				and t.VIDEO_TYPE = #{videoType}
			</if>
		</where>
	</select>

    

	<select id="queryVideoSectionByVideoId" resultType="com.rs.teach.mapper.section.entity.Section">
		select 	t.VIDEO_SECTION_ID as sectionId,
				t.VIDEO_SECTION_NAME as sectionName,
				t.VIDEO_ID as courseId,
				t.VIDEO_SECTION_URL as sectionUrl,
				t.VIDEO_SECTION_SORT as sectionSort,
				ts.totle_section_sort as totleSectionSort,
				ts.totle_section_name as totleSectionName,
				t.PAPER_ID as testPaperId,
				t.WORK_ID as workId,
				t.COURSE_WARE_ID as coursewareId
		from TF_EL_VIDEO_SECTION t,tf_el_train_totle_section ts
		where  t.videototle_sortid = ts.id and t.VIDEO_ID = #{videoId}
		order by ts.totle_section_sort, t.videosection_sort
	</select>


	<!-- 查询我的视频课程 -->
	<resultMap type="java.util.HashMap" id="myVideo">
		<result property="videoId" column="VIDEO_ID" />
		<result property="videoName" column="VIDEO_NAME" />
	</resultMap>
	<select id="MyVideo" parameterType="java.lang.String" resultMap="myVideo">
		select vi.video_id,vi.video_name from tf_el_video vi, user_course_rela re
    	where vi.video_id = re.course_id
        	and re.user_id = #{userId}
        	and re.rela_type = '3' group by vi.video_id,vi.video_name
	</select>

	<!-- 查询视频课程的总章节数 -->
	<select id="getVideoNum" parameterType="java.lang.String" resultType="java.lang.String">
		select count(1) from tf_el_video_section where VIDEO_ID = #{videoId}
	</select>

	<!-- 根据id查询视频课程信息 -->
	<select id="queryVideoById" parameterType="java.lang.String" resultMap="video">
		select * from tf_el_video where video_id = #{videoId}
	</select>

	<!-- 查询已学完的章节信息 -->
	<resultMap type="java.util.HashMap" id="secMap">
		<result property="sectionId" column="section_id" />
		<result property="sectionSort" column="section_SORT" />
		<result property="sectionName" column="section_name" />
		<result property="totleSectionSort" column="totleSection_sort" />
		<result property="totleSectionName" column="totleSection_name" />
	</resultMap>
	<select id="finishStudy" parameterType="java.lang.String" resultMap="secMap">
		select re.section_id,
       		ve.VIDEOSECTION_NAME as section_name,
       		ve.VIDEOSECTION_SORT as section_SORT,
       		ts.totle_section_sort as totleSection_sort,
       		ts.totle_section_name as totleSection_name 
	from user_course_rela re, tf_el_video_section ve, tf_el_train_totle_section ts
    where re.section_id = ve.VIDEOSECTION_ID and ve.videototle_sortid = ts.id
      	  and re.rela_type = '4'
		  and re.user_id = #{userId}
		  and re.course_id = #{videoId}
		  and re.class_id = #{classId}
		  and re.isfinish = '2'
	</select>

	<!-- 根据vedioId查询视频课程章节信息 -->
	<select id="queryVideoSection" parameterType="java.lang.String" resultMap="videoSection">
		select t.videosection_id,t.videosection_name,
       		t.video_id,t.videosection_url,
       		t.videosection_path,t.videosection_sort,
       		ts.totle_section_sort as VIDEOTOTLE_SORT ,ts.totle_section_name as VIDEOTOTLE_NAME,
       		t.paper_id,t.work_id,t.course_wareid 
       	from tf_el_video_section t,tf_el_train_totle_section ts 
       where t.videototle_sortid = ts.id and t.VIDEO_ID = #{videoId} order by ts.totle_section_sort, t.videosection_sort
	</select>

	<!-- 根据videoSectionId 查询视频章节信息 -->
	<select id="querySectionBySecId" parameterType="java.lang.String" resultMap="videoSection">
		select t.videosection_id,t.videosection_name,
       		t.video_id,t.videosection_url,
       		t.videosection_path,t.videosection_sort,t.VIDEOTOTLE_SORTID,
       		ts.totle_section_sort as VIDEOTOTLE_SORT ,ts.totle_section_name as VIDEOTOTLE_NAME,
       		t.paper_id,t.work_id,t.course_wareid 
       	from tf_el_video_section t,tf_el_train_totle_section ts 
       where t.videototle_sortid = ts.id and t.videosection_id = #{videoSectionId}
	</select>

	<!-- 查询各视频课程课件学习状态 -->
	<resultMap type="java.util.HashMap" id="sMap">
		<result property="sectionId" column="section_id"/>
		<result property="totleSectionSort" column="totlesection_sort"/>
		<result property="totleSectionName" column="totlesection_name"/>
		<result property="sectionSort" column="section_sort"/>
		<result property="sectionName" column="section_name"/>
		<result property="courseId" column="course_id"/>
		<result property="studyStatus" column="isfinish"/>
		<result property="classId" column="class_id"/>
		<result property="coursewareId" column="courseware_id"/>
	</resultMap>
	<!-- 查询章节学习状态 -->
	<select id="querySectionStatus" parameterType="java.lang.String" resultMap="sMap">
	select vs.videosection_id as section_id, ts.totle_section_sort as totlesection_sort,
			ts.totle_section_name as totlesection_name,vs.videosection_sort as section_sort,
			vs.videosection_name as section_name, vs.video_id as course_id, ucr.isfinish,ucr.class_id,
       		vs.course_wareid as courseware_id
		from tf_el_video_section vs,  user_course_rela ucr, tf_el_train_totle_section ts
	where vs.videosection_id = ucr.section_id and vs.videototle_sortid = ts.id
 		and ucr.course_id = #{videoId}
 		and ucr.user_id = #{userId}
 		and ucr.class_id = #{classId} order by ts.totle_section_sort, vs.videosection_sort
	</select>
	
	<!-- 管理员系统sql Start -->
	<select id="adminQueryVideos" parameterType="java.lang.String" resultMap="video">
		select * from tf_el_video where VIDEO_TYPE = #{videoType}
	</select>
	
	<select id="adminVideosInit" parameterType="java.lang.String" resultMap="video">
		select t.VIDEO_ID,t.VIDEO_NAME,t.VIDEO_URL,t.SCHOOLWORK,t.VIDEOWARE,t.TESTPAPER,t.VIDEO_PATH,s.code_value as VIDEO_TYPE from tf_el_video t,sys_code s
		<where>
			t.VIDEO_TYPE = s.code and s.code_type = 'VIDEO_CODE'
			<if test="videoType != null and videoType != ''">
				and t.VIDEO_TYPE = #{videoType}
			</if>
			<if test="videoName != null and videoName != ''">
				and t.VIDEO_NAME like '%'||#{videoName}||'%'
			</if>
		</where>
	</select>
	
	<!-- 新增视频课程 -->
	<insert id="adminInsertVideo" parameterType="com.rs.teach.mapper.video.entity.Video">
		insert into tf_el_video 
			(
				VIDEO_ID,
				VIDEO_NAME,
				VIDEO_URL,
				VIDEO_PATH,
				SCHOOLWORK,
				VIDEOWARE,
				TESTPAPER,
				VIDEO_TYPE
			)
		values
			(
				#{videoId},
				#{videoName},
				#{videoUrl},
				#{videoPath},
				#{schoolWork},
				#{videoWare},
				#{testPaper},
				#{videoType}
			)
	</insert>
	
	<delete id="adminDelVideo" parameterType="java.lang.String">
		delete from tf_el_video where VIDEO_ID = #{videoId}
	</delete>
	
	<update id="adminUpdate" parameterType="com.rs.teach.mapper.video.entity.Video">
		update tf_el_video t
		<set>
			<if test="videoUrl != null and videoUrl != ''">
				t.VIDEO_URL = #{videoUrl},
			</if>
			<if test="videoPath != null and videoPath != ''">
				t.VIDEO_PATH = #{videoPath},
			</if>
			<if test="videoName != null and videoName != ''">
				t.VIDEO_NAME = #{videoName},
			</if>
			<if test="videoType != null and videoType != ''">
				t.VIDEO_TYPE = #{videoType},
			</if>
			<if test="schoolWork != null and schoolWork != ''">
				t.SCHOOLWORK = #{schoolWork},
			</if>
			<if test="videoWare != null and videoWare != ''">
				t.VIDEOWARE = #{videoWare},
			</if>
			<if test="testPaper != null and testPaper != ''">
				t.TESTPAPER = #{testPaper}
			</if>
			
		</set>
		where t.VIDEO_ID = #{videoId}
	</update>
	
	<!-- 查询大章节信息 -->
	<resultMap type="java.util.HashMap" id="totleInfo">
		<result property="totleSort" column="TOTLE_SECTION_SORT" />
		<result property="totleName" column="TOTLE_SECTION_NAME" />
	</resultMap>
	<select id="adminTotleInfo" parameterType="java.lang.String" resultMap="totleInfo">
		select TOTLE_SECTION_SORT,TOTLE_SECTION_NAME from tf_el_train_totle_section where course_Id = #{videoId} order by TOTLE_SECTION_SORT
	</select>
	
	<!-- 根据video查询视频课程的所有章节信息(包含未添加小章节的大章节信息) -->
	<resultMap type="java.util.HashMap" id="adminVideoInfo">
		<result property="sectionId" column="videosection_id"/>
		<result property="sectionSort" column="videosection_sort"/>
		<result property="sectionName" column="videosection_name"/>
		<result property="totleSortId" column="videototle_sortid"/>
		<result property="totleSectionSort" column="videototle_sort"/>
		<result property="totleSectionName" column="videototle_name"/>
	</resultMap>
	<select id="adminGetVideoInfo" parameterType="java.lang.String" resultMap="adminVideoInfo">
		select t.videosection_id,t.videosection_sort,t.videosection_name,t.videototle_sortid,
       		ts.totle_section_sort as videototle_sort, ts.totle_section_name as videototle_name 
      	 from tf_el_video_section t,tf_el_train_totle_section ts 
        where t.videototle_sortid = ts.id and t.VIDEO_ID = #{videoId}
  union
       select '','','',ts.id,ts.totle_section_sort,ts.totle_section_name 
      	from tf_el_train_totle_section ts 
       where ts.course_id = #{videoId}
      		and not exists (select * from tf_el_video_section t where t.videototle_sortid = ts.id)
	</select>
	
	<!-- 新增大章节 -->
	<insert id="adminAddTotleInfo" parameterType="com.rs.teach.mapper.backstage.entity.TotleSection">
		insert into tf_el_train_totle_section
			(
				ID,
				TOTLE_SECTION_SORT,
				TOTLE_SECTION_NAME,
				COURSE_ID
			)
		values
			(
				SEQ_EL_TRAIN_TOTLE_SECTION.nextval,
				#{totleSectionSort},
				#{totleSectionName},
				#{courseId}
			)
	</insert>
	
	<select id="getTotleSection" parameterType="java.lang.String" resultType="com.rs.teach.mapper.backstage.entity.TotleSection">
		select * from tf_el_train_totle_section where ID = #{id}
	</select>
	
	<update id="updateTotleSection" parameterType="com.rs.teach.mapper.backstage.entity.TotleSection">
		update TF_EL_TRAIN_TOTLE_SECTION
        set TOTLE_SECTION_NAME = #{totleSectionName}
        where id = #{id}
	</update>
	
	<!-- 根据大章节序号 和 视频课程id查询章节信息 -->
	<select id="adminGetVedioSection" parameterType="java.lang.String" resultType="com.rs.teach.mapper.video.entity.VideoSection">
		select * from tf_el_video_section t where t.video_id = #{videoId} and t.VIDEOTOTLE_SORTID = #{totleSortId}
	</select>
    <select id="selectVideoNum" resultType="java.lang.Integer">
		select count(1) from TF_EL_VIDEO
	</select>

    <!-- 插入视频课件 -->
	<insert id="insertVideoSection" parameterType="com.rs.teach.mapper.video.entity.VideoSection">
		insert into tf_el_video_section
			(
				VIDEOSECTION_ID,
				VIDEOSECTION_NAME,
				VIDEO_ID,
				VIDEOSECTION_URL,
				VIDEOSECTION_PATH,
				VIDEOSECTION_SORT,
				VIDEOTOTLE_SORTID,
				PAPER_ID,
				WORK_ID
			)
		values
			(
				#{videoSectionId},
				#{videoSectionName},
				#{videoId},
				#{videoSectionUrl},
				#{videoSectionPath},
				#{videoSectionSort},
				#{videoTotleSortId},
				#{paperId},
				#{workId}
			)
	</insert>
	
	<!-- 删除视频课件 -->
	<delete id="delVideoSection" parameterType="java.lang.String">
		delete from tf_el_video_section where VIDEOSECTION_ID = #{videoSectionId}
	</delete>
	
	<!-- 修改视频课件 -->
	<update id="updateVideoSection" parameterType="com.rs.teach.mapper.video.entity.VideoSection">
		update tf_el_video_section
		<set>
			<if test="videoSectionName != null and videoSectionName != ''">
				VIDEOSECTION_NAME = #{videoSectionName},
			</if>
			<if test="videoSectionUrl != null and videoSectionUrl != ''">
				VIDEOSECTION_URL = #{videoSectionUrl},
			</if>
			<if test="videoSectionPath != null and videoSectionPath != ''">
				VIDEOSECTION_PATH = #{videoSectionPath},
			</if>
			<if test="paperId != null and paperId != ''">
				PAPER_ID = #{paperId},
			</if>
			<if test="workId != null and workId != ''">
				WORK_ID = #{workId},
			</if>
		</set>
		where VIDEOSECTION_ID = #{videoSectionId}
	</update>
	
	<update id="updateSort" parameterType="java.lang.String">
		update tf_el_video_section set videosection_sort = to_number(t.videosection_sort)-1 where 
			videototle_sortid = #{videoTotleSortId} 
			and VIDEO_ID = #{videoId}
			and to_number(videosection_sort) > #{videoSectionSort}
	</update>
	
</mapper>